{"version":3,"file":"static/js/269.98a6ff70.chunk.js","mappings":"kRAQMA,GAAcC,EAAAA,EAAAA,GAAU,IAwBxBC,GAAiBC,EAAAA,EAAAA,GAAkD,CAACC,KAAM,SAAzDD,EAjBqF,SAAC,GAAkC,IAAjCE,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAE/H,OAAO,0BACH,kBAAMC,SAAUH,EAAhB,WACI,mCACCI,EAAAA,EAAAA,IAAiC,QAAQ,QAAS,CAACC,EAAAA,EAAeV,GAAcW,EAAAA,KAChFF,EAAAA,EAAAA,IAAiC,WAAW,WAAY,CAACC,EAAAA,EAAeV,GAAcW,EAAAA,GAAO,CAACC,KAAM,cACpGH,EAAAA,EAAAA,SAAiCI,EAAU,aAAc,GAAIF,EAAAA,GAAO,CAACC,KAAM,YAAa,eACxFN,IAAS,gBAAKQ,UAAWC,EAAAA,EAAAA,iBAAhB,SAAyCT,IAClDC,IAAW,gBAAKS,IAAKT,IACrBA,IAAWE,EAAAA,EAAAA,IAAiC,uBAAuB,UAAW,CAACC,EAAAA,GAAgBC,EAAAA,KAChG,0BACI,4CAIf,IAsBD,EAX4E,SAACM,GAIzE,OAAGA,EAAMC,QAAe,SAAC,KAAD,CAAUC,GAAI,cAE/B,0BACH,SAACjB,EAAD,CAAgBM,SANL,SAACY,GACZH,EAAMI,MAAMD,EACf,EAIuCb,QAASU,EAAMV,WAE1D,E,oBCpCKe,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CASD,OATCA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,qBAAAA,MACF,SAAmBC,GACZA,EAAUhB,SAAWiB,KAAKP,MAAMV,SAE/BiB,KAAKC,QAEZ,uBACD,WACI,OAAO,SAAC,GAAD,kBAAWD,KAAKP,OAAhB,IAAuBV,QAASiB,KAAKP,MAAMV,QAASc,MAAOG,KAAKP,MAAMI,QAChF,OATCC,CAAuBI,EAAAA,WAgB7B,GAAeC,EAAAA,EAAAA,KALO,SAACC,GAAD,MAA+C,CACjEV,OAAQU,EAAMC,KAAKX,OACnBX,QAASqB,EAAMC,KAAKtB,QAFF,GAKuF,CAACc,MAAAA,EAAAA,IAA9G,CAAsHC,E","sources":["components/Login/Login.tsx","components/Login/LoginContainer.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport { maxLength, requiredField } from \"../../utils/Validators\";\r\nimport { createField, Input } from \"../common/FormControls/FormControls\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport style from \"../common/FormControls/FormControls.module.css\";\r\nimport { MapDispatchPropsTypeLogin, MapStatePropsTypeLogin } from \"./LoginContainer\";\r\n\r\nconst maxLength30 = maxLength(30);\r\n\r\ninterface LoginFormOwnProps {\r\n    captcha: string | null\r\n    children?: JSX.Element|JSX.Element[];\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnProps> & LoginFormOwnProps>  = ({handleSubmit, error, captcha})=>{\r\n    \r\n    return(<div>\r\n        <form onSubmit={handleSubmit}>\r\n            <h1>Login</h1>\r\n            {createField<LoginFormValuesKeys>(\"Email\",\"email\", [requiredField, maxLength30], Input)}\r\n            {createField<LoginFormValuesKeys>(\"Password\",\"password\", [requiredField, maxLength30], Input, {type: \"password\"})}\r\n            {createField<LoginFormValuesKeys>(undefined,\"rememberMe\", [], Input, {type: \"checkBox\"}, \"Remember me\")}\r\n            {error && <div className={style.formSummaryError}>{error}</div>}\r\n            {captcha && <img src={captcha}/>}\r\n            {captcha && createField<LoginFormValuesKeys>(\"Symbols from picture\",\"captcha\", [requiredField], Input)}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    </div>);\r\n}\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnProps>({form: 'login'})(LoginForm);\r\n\r\nexport type LoginFormValuesType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n    captcha: string | null\r\n}\r\ntype LoginFormValuesKeys = Extract<keyof LoginFormValuesType, string>;\r\n\r\nconst Login: React.FC<MapStatePropsTypeLogin & MapDispatchPropsTypeLogin> = (props)=>{\r\n    const onSubmit=(formData: any)=>{ \r\n        props.login(formData);\r\n    }\r\n    if(props.isAuth) return <Navigate to={\"/profile\"}/>\r\n\r\n    return(<div>\r\n        <LoginReduxForm onSubmit={onSubmit} captcha={props.captcha}/>\r\n    </div>);\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport {connect} from 'react-redux';\r\nimport {login} from \"../../redux/authReducer\";\r\nimport { AppStateType } from \"../../redux/reduxStore\";\r\n\r\nexport type MapStatePropsTypeLogin = {\r\n    isAuth:boolean,\r\n    captcha: string | null\r\n}\r\nexport type MapDispatchPropsTypeLogin = {\r\n    login: (formData: any) => void\r\n}\r\ntype Props = MapStatePropsTypeLogin & MapDispatchPropsTypeLogin;\r\n\r\nclass LoginContainer extends React.Component<Props>{\r\n    componentDidUpdate(prevProps: Props){\r\n        if(prevProps.captcha != this.props.captcha)\r\n        {\r\n            this.render();\r\n        }\r\n    }\r\n    render(){\r\n        return <Login {...this.props} captcha={this.props.captcha} login={this.props.login}/>\r\n    }\r\n}\r\nlet mapStateToProps = (state: AppStateType):MapStatePropsTypeLogin=>({\r\n    isAuth: state.auth.isAuth,\r\n    captcha: state.auth.captcha\r\n   });\r\n\r\nexport default connect<MapStatePropsTypeLogin, MapDispatchPropsTypeLogin, {}, AppStateType>(mapStateToProps, {login})(LoginContainer);\r\n\r\n"],"names":["maxLength30","maxLength","LoginReduxForm","reduxForm","form","handleSubmit","error","captcha","onSubmit","createField","requiredField","Input","type","undefined","className","style","src","props","isAuth","to","formData","login","LoginContainer","prevProps","this","render","React","connect","state","auth"],"sourceRoot":""}