{"version":3,"file":"static/js/262.ef0a4dae.chunk.js","mappings":"uLACA,EAA0B,yBAA1B,EAAiE,6BAAjE,EAA4G,6BAA5G,EAAgJ,sBAAhJ,EAAiL,0BAAjL,EAAwP,2BAAxP,EAAiS,6BAAjS,EAA6U,8B,SCS7U,EAPmB,SAACA,GAChB,OACA,gBAAKC,UAAWC,EAAa,IAA7B,UACA,UAAC,KAAD,CAASC,GAAI,YAAYH,EAAMI,GAA/B,WAAmC,gBAAKC,IAAKL,EAAMM,MAAQN,EAAMO,SAEpE,ECDD,EALiB,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,QACrB,OACI,0BAAK,gBAAKR,UAAWO,EAAON,EAAoBA,EAA3C,SAAgEO,KAE5E,E,6BCLD,EAA2B,6BAA3B,EAA6E,uCAA7E,EAAsI,oCCKhIC,GAAeC,EAAAA,EAAAA,GAAU,KAazBC,GAAkBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,UAAjBD,EAZL,SAACb,GAChB,OAAO,gBAAKC,UAAWC,EAAhB,UACH,kBAAMa,SAAUf,EAAMgB,aAAtB,WACI,gBAAKf,UAAWC,EAAhB,UACKe,EAAAA,EAAAA,IAAY,UAAU,cAAe,CAACP,GAAeQ,EAAAA,OAE1D,gBAAKjB,UAAWC,EAAhB,UACI,2CAIf,IAYD,EATwB,SAACF,GAIrB,OAAO,0BACH,SAACY,EAAD,CAAiBG,SAJN,SAACI,GACZnB,EAAMoB,YAAYD,EACrB,KAIJ,ECFD,EApBgB,SAACnB,GACb,IAAIqB,EAAQrB,EAAMsB,WACdC,EAAiBF,EAAMG,QAAQC,KAAI,SAAAC,GAAM,OAAI,SAAC,EAAD,CAAYtB,GAAMsB,EAAOtB,GAAoBG,KAAQmB,EAAOnB,KAAMD,IAAOoB,EAAOpB,KAA9CoB,EAAOtB,GAA7C,IACzCuB,EAAkBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAACC,EAAD,CAAUrB,QAAUoB,EAAEpB,QAAoBD,KAAY,GAANqB,EAAEzB,IAAdyB,EAAEzB,GAA1C,IAG1C,OAAO,iBAAKH,UAAWC,EAAhB,WACH,gBAAKD,UAAWC,EAAhB,SACKqB,KAEL,iBAAKtB,UAAWC,EAAhB,WACA,gBAAKD,UAAWC,EAAhB,SACKyB,KAEL,gBAAK1B,UAAWC,EAAhB,UACQ,SAAC,EAAD,CAAiBkB,YAXX,SAACW,GAAD,OAAY/B,EAAMoB,YAAYW,EAAOC,YAArC,WAerB,E,wCCJD,GAAeC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAfkB,SAACb,GAEnB,MAAQ,CACJC,WAAYD,EAAMC,WAEzB,IACwB,SAACa,GACtB,MAAQ,CACJf,YAAa,SAACgB,GACVD,GAASE,EAAAA,EAAAA,GAAwBD,IACjCD,GAASG,EAAAA,EAAAA,IAAM,UAClB,EAER,IAGGC,EAAAA,EAFJ,CAGEC,E","sources":["webpack://react-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","webpack://react-app/./src/components/Dialogs/DialogsForm/DialogForm.module.css?aceb","components/Dialogs/DialogsForm/DialogsForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__nTOr-\",\"dialogItems\":\"Dialogs_dialogItems__220uJ\",\"messageBody\":\"Dialogs_messageBody__Qdt-D\",\"item\":\"Dialogs_item__4mSBz\",\"messages\":\"Dialogs_messages__y+uwf\",\"active\":\"Dialogs_active__QW2W8\",\"chatInput\":\"Dialogs_chatInput__IIE3K\",\"userMessage\":\"Dialogs_userMessage__tcsuo\",\"otherMessage\":\"Dialogs_otherMessage__z6nhV\"};","import { NavLink } from 'react-router-dom';\r\nimport style from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) =>{\r\n    return (\r\n    <div className={style.item + ' ' /*+ style.active*/}>\r\n    <NavLink to={\"/dialogs/\"+props.id}><img src={props.ava} />{props.name}</NavLink>\r\n    </div>);\r\n}\r\n\r\nexport default DialogItem;","import style from './../Dialogs.module.css';\r\n\r\nconst Messages = ({user, message}) =>{\r\n    return(\r\n        <div><div className={user ? style.userMessage : style.otherMessage}>{message}</div></div>\r\n    );\r\n}\r\nexport default Messages;","// extracted by mini-css-extract-plugin\nexport default {\"chatForm\":\"DialogForm_chatForm__Kh-kt\",\"chatInputContainer\":\"DialogForm_chatInputContainer__1Cve6\",\"chatInputButton\":\"DialogForm_chatInputButton__j-QGB\"};","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLength } from \"../../../utils/Validators\";\r\nimport { createField, Textarea } from \"../../common/FormControls/FormControls\";\r\nimport style from './DialogForm.module.css';\r\n\r\nconst maxLength500 = maxLength(500);\r\nconst DialogForm = (props)=>{\r\n    return(<div className={style.chatForm}>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={style.chatInputContainer}>\r\n                {createField(\"Message\",\"messageText\", [maxLength500], Textarea)}\r\n            </div>\r\n            <div className={style.chatInputButton}>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    </div>)\r\n}\r\nconst DialogReduxForm = reduxForm({form: 'dialog'})(DialogForm);\r\n\r\nconst DialogContainer = (props)=>{\r\n    const onSubmit=(formData)=>{\r\n        props.messageSend(formData);\r\n    }\r\n    return(<div>\r\n        <DialogReduxForm onSubmit={onSubmit}/>\r\n    </div>);\r\n}\r\n\r\nexport default DialogContainer;","import DialogItem from './DialogItem/DialogItem';\r\nimport style from './Dialogs.module.css';\r\nimport Messages from './Message/Message';\r\nimport React from 'react';\r\nimport DialogContainer from './DialogsForm/DialogsForm';\r\n\r\nconst Dialogs = (props)=>{\r\n    let state = props.dialogPage;\r\n    let dialogElements = state.dialogs.map(dialog => <DialogItem id = {dialog.id} key={dialog.id} name = {dialog.name} ava = {dialog.ava}/>);\r\n    let messageElements = state.messages.map(m => <Messages message ={m.message} key={m.id} user={m.id!=3 ? true: false} />);\r\n    let messageSend = (values) => props.messageSend(values.messageText);\r\n\r\n    return(<div className={style.dialogs}>\r\n        <div className={style.dialogItems}>\r\n            {dialogElements}        \r\n        </div>\r\n        <div className={style.messageBody}>\r\n        <div className={style.messages}>\r\n            {messageElements}            \r\n        </div>\r\n        <div className={style.chatInput}>\r\n                <DialogContainer messageSend={messageSend}/>\r\n        </div>\r\n        </div>\r\n    </div>);\r\n}\r\nexport default Dialogs;","import React from 'react';\r\nimport { addMessageActionCreator } from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from \"react-redux\";\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport {compose} from \"redux\";\r\nimport { reset } from 'redux-form';\r\nlet mapStateToProps = (state)=>{\r\n\r\n    return ({\r\n        dialogPage: state.dialogPage\r\n    });\r\n}\r\nlet mapDispatchToProps = (dispatch)=>{\r\n    return ({\r\n        messageSend: (newMessage)=>{ \r\n            dispatch(addMessageActionCreator(newMessage)); \r\n            dispatch(reset('dialog'));\r\n        }\r\n    });\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"names":["props","className","style","to","id","src","ava","name","user","message","maxLength500","maxLength","DialogReduxForm","reduxForm","form","onSubmit","handleSubmit","createField","Textarea","formData","messageSend","state","dialogPage","dialogElements","dialogs","map","dialog","messageElements","messages","m","Message","values","messageText","compose","connect","dispatch","newMessage","addMessageActionCreator","reset","withAuthRedirect","Dialogs"],"sourceRoot":""}