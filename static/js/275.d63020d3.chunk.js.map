{"version":3,"file":"static/js/275.d63020d3.chunk.js","mappings":"kRAOMA,GAAcC,EAAAA,EAAAA,GAAU,IAmBxBC,GAAiBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,SAAjBD,EAjBL,SAAC,GAAkC,IAAjCE,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAErC,OAAO,0BACH,kBAAMC,SAAUH,EAAhB,WACI,mCACCI,EAAAA,EAAAA,IAAY,QAAQ,QAAS,CAACC,EAAAA,EAAeV,GAAcW,EAAAA,KAC3DF,EAAAA,EAAAA,IAAY,WAAW,WAAY,CAACC,EAAAA,EAAeV,GAAcW,EAAAA,GAAO,CAACC,KAAM,cAC/EH,EAAAA,EAAAA,IAAY,KAAK,aAAc,KAAME,EAAAA,GAAO,CAACC,KAAM,YAAa,eAChEN,IAAS,gBAAKO,UAAWC,EAAAA,EAAAA,iBAAhB,SAAyCR,IAClDC,IAAW,gBAAKQ,IAAKR,IACrBA,IAAWE,EAAAA,EAAAA,IAAY,uBAAuB,UAAW,CAACC,EAAAA,GAAgBC,EAAAA,KAC3E,0BACI,4CAIf,IAaD,EAXc,SAACK,GAIX,OAAGA,EAAMC,QAAe,SAAC,KAAD,CAAUC,GAAI,cAE/B,0BACH,SAAChB,EAAD,CAAgBM,SANL,SAACW,GACZH,EAAMI,MAAMD,EACf,EAIuCZ,QAASS,EAAMT,WAE1D,E,oBCrBKc,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CASD,OATCA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,qBAAAA,MACF,SAAmBC,GACZA,EAAUf,SAAWgB,KAAKP,MAAMT,SAE/BgB,KAAKC,QAEZ,uBACD,WACI,OAAO,SAAC,GAAD,kBAAWD,KAAKP,OAAhB,IAAuBT,QAASgB,KAAKP,MAAMT,QAASa,MAAOG,KAAKP,MAAMI,QAChF,OATCC,CAAuBI,EAAAA,WAgB7B,GAAeC,EAAAA,EAAAA,KALO,SAACC,GAAD,MAA0C,CAC5DV,OAAQU,EAAMC,KAAKX,OACnBV,QAASoB,EAAMC,KAAKrB,QAFF,GAK6E,CAACa,MAAAA,EAAAA,IAApG,CAA4GC,E","sources":["components/Login/Login.jsx","components/Login/LoginContainer.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { maxLength, requiredField } from \"../../utils/Validators\";\r\nimport { createField, Input } from \"../common/FormControls/FormControls\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport style from \"../common/FormControls/FormControls.module.css\";\r\n\r\nconst maxLength30 = maxLength(30);\r\n\r\nconst LoginForm = ({handleSubmit, error, captcha})=>{\r\n    \r\n    return(<div>\r\n        <form onSubmit={handleSubmit}>\r\n            <h1>Login</h1>\r\n            {createField(\"Email\",\"login\", [requiredField, maxLength30], Input)}\r\n            {createField(\"Password\",\"password\", [requiredField, maxLength30], Input, {type: \"password\"})}\r\n            {createField(null,\"rememberMe\", null, Input, {type: \"checkBox\"}, \"Remember me\")}\r\n            {error && <div className={style.formSummaryError}>{error}</div>}\r\n            {captcha && <img src={captcha}/>}\r\n            {captcha && createField(\"Symbols from picture\",\"captcha\", [requiredField], Input)}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    </div>);\r\n}\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\nconst Login = (props)=>{\r\n    const onSubmit=(formData)=>{ \r\n        props.login(formData);\r\n    }\r\n    if(props.isAuth) return <Navigate to={\"/profile\"}/>\r\n\r\n    return(<div>\r\n        <LoginReduxForm onSubmit={onSubmit} captcha={props.captcha}/>\r\n    </div>);\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport Login from \"./Login\";\r\nimport {connect} from 'react-redux';\r\nimport {login} from \"../../redux/authReducer\";\r\nimport { AppStateType } from \"../../redux/reduxStore\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth:boolean,\r\n    captcha: string | null\r\n}\r\ntype MapDispatchPropsType = {\r\n    login: (formData: any) => void\r\n}\r\ntype Props = MapStatePropsType & MapDispatchPropsType;\r\n\r\nclass LoginContainer extends React.Component<Props>{\r\n    componentDidUpdate(prevProps: Props){\r\n        if(prevProps.captcha != this.props.captcha)\r\n        {\r\n            this.render();\r\n        }\r\n    }\r\n    render(){\r\n        return <Login {...this.props} captcha={this.props.captcha} login={this.props.login}/>\r\n    }\r\n}\r\nlet mapStateToProps = (state: AppStateType):MapStatePropsType=>({\r\n    isAuth: state.auth.isAuth,\r\n    captcha: state.auth.captcha\r\n   });\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {login})(LoginContainer);\r\n\r\n"],"names":["maxLength30","maxLength","LoginReduxForm","reduxForm","form","handleSubmit","error","captcha","onSubmit","createField","requiredField","Input","type","className","style","src","props","isAuth","to","formData","login","LoginContainer","prevProps","this","render","React","connect","state","auth"],"sourceRoot":""}